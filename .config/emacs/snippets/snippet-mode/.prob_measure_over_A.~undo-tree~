(undo-tree-save-format-version . 1)
"ce49dd63a8a7fee98ab89185c022d5860bc8975a"
[nil nil nil nil (26208 23217 132558 0) 0 nil]
([nil nil ((apply yas--snippet-revive 1 47 #s(yas--snippet nil (#s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #8) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #7 #s(yas--exit 47 nil) nil))) #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) #s(yas--exit 47 nil) 7 nil #s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #7) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) nil nil)) (apply yas--take-care-of-redo #s(yas--snippet nil (#s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #8) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #7 #s(yas--exit 47 nil) nil))) #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) #s(yas--exit 47 nil) 7 nil #s(yas--field 1 33 33 nil (#s(yas--mirror 41 41 (yas--key-from-desc yas-text) #s(yas--field 2 41 41 nil nil nil nil #7) #s(yas--exit 47 nil) nil)) nil nil #s(yas--field 2 41 41 nil nil nil nil #s(yas--mirror 41 41 (yas--key-from-desc yas-text) #6 #s(yas--exit 47 nil) nil))) nil nil)) (1 . 47)) nil (26208 23217 132557 0) 0 nil])
([nil nil ((#(" " 0 1 (face font-lock-comment-face fontified t)) . -53) (undo-tree-id6 . -1) 54 (52 . 54) (#("a" 0 1 (face font-lock-comment-face fontified t)) . -52) (undo-tree-id7 . -1) 53 (48 . 53) (#("f" 0 1 (face font-lock-comment-face fontified t)) . -48) (undo-tree-id8 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -49) (undo-tree-id9 . -1) (#("A" 0 1 (face font-lock-comment-face fontified t)) . -50) (undo-tree-id10 . -1) (#(" " 0 1 (face font-lock-comment-face fontified t)) . -51) (undo-tree-id11 . -1) 52 (39 . 52) (#("w" 0 1 (face font-lock-comment-face fontified t)) . -39) (undo-tree-id12 . -1) 40 (33 . 40) (#("p" 0 1 (face font-lock-comment-face fontified t)) . -33) (undo-tree-id13 . -1) (undo-tree-id14 . -1) (#("r" 0 1 (face font-lock-comment-face fontified t)) . -34) (undo-tree-id15 . -1) 35 (33 . 35)) nil (26208 23217 132552 0) 0 nil])
([nil nil ((61 . 66)) nil (26208 23217 132529 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 72 . 73) (#("
" 0 1 (fontified nil)) . -88) (72 . 89)) nil (26208 23217 132528 0) 0 nil])
([nil nil ((#("R" 0 1 (fontified t)) . 86)) nil (26208 23217 132526 0) 0 nil])
([nil nil ((93 . 95) (86 . 93) (#("mat" 0 3 (fontified t)) . -86) (undo-tree-id0 . -3) (undo-tree-id1 . -3) 89 (#("h" 0 1 (fontified t)) . -89) (undo-tree-id2 . -1) (undo-tree-id3 . -1) (#("c" 0 1 (fontified t)) . -90) (undo-tree-id4 . -1) (undo-tree-id5 . -1) 91 (86 . 91)) nil (26208 23217 132523 0) 0 nil])
([nil nil ((#("}" 0 1 (face (rainbow-delimiters-mismatched-face font-lock-keyword-face) fontified t)) . 93)) nil (26208 23217 132491 0) 0 nil])
([nil nil ((nil rear-nonsticky nil 94 . 95) (nil fontified nil 94 . 95) (94 . 95) 93) nil (26208 23217 132490 0) 0 nil])
([nil nil ((94 . 95) (#("A" 0 1 (face (rainbow-delimiters-depth-2-face) fontified nil)) . -94) (94 . 95)) nil (26208 23217 132486 0) 0 nil])
([nil current ((#("
" 0 1 (rear-nonsticky t fontified t)) . 72)) nil (26208 23217 132480 0) 0 nil])
nil
